EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Captura cadena teclado.exe -- emu8086 assembler version: 4.08  
 
[ 29/07/2019  --  4:11:07 p. m. ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       
[   3]        :                                       .stack
[   4]        :                                       
[   5]        :                                       .data
[   6]        :                                       
[   7]    0100: 0A 0D 07 49 6E 67 72 65 73 65 20 43   msg db 10,13,7,"Ingrese Cadena: ","$"
                61 64 65 6E 61 3A 20 24             
[   8]    0114: 64 00 00 00 00 00 00 00 00 00 00 00   cadena db 100,?,100 dup(?),"$"
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 24                
[   9]        :                                       
[  10]        :                                       .code
[  11]        :                                       
[  12]    0180: BA 10 00 8E DA                        .startup
[  13]        :                                       
[  14]    0185: BA 00 00                              MOV     dx, offset msg
[  15]    0188: B4 09                                 MOV     ah, 09h
[  16]    018A: CD 21                                 INT     21h
[  17]        :                                       
[  18]        :                                       
[  19]    018C: B4 0A                                 MOV     ah, 0ah
[  20]    018E: BA 14 00                              MOV     dx, offset[cadena]
[  21]    0191: CD 21                                 INT     21h
[  22]        :                                       
[  23]    0193: BA 14 00                              MOV     dx, offset[cadena]
[  24]    0196: B4 09                                 MOV     ah, 09h
[  25]    0198: CD 21                                 INT     21h
[  26]        :                                       
[  27]    019A: B8 07 0C                              MOV     ax, 0c07h
[  28]    019D: CD 21                                 INT     21h
[  29]        :                                       
[  30]    019F: B8 00 4C CD 21                        .exit
[  31]        :                                       
[  32]        :                                       end
[  33]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: A4      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 5E      -   check sum (l.byte)
0013: 29      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 18      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 18      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
