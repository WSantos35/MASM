EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe -- emu8086 assembler version: 4.08  
 
[ 28/07/2019  --  10:20:26 a. m. ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .data
[   3]    0000: 7A 75 72 6B 2C 20 32 30 31 35 24      msg db "zurk, 2015","$"
[   4]        :                                       
[   5]        :                                       .code
[   6]        :                                       
[   7]    0010:                                       main PROC
[   8]    0010: B8 00 00                              mov ax, seg msg
[   9]    0013: 8E D8                                 mov ds, ax
[  10]    0015: B4 09                                 mov ah, 09h
[  11]    0017: BA 00 00                              lea dx, msg
[  12]    001A: CD 21                                 int 21h
[  13]    001C: B8 00 4C CD 21                        .exit
[  14]        :                                       main endp
[  15]        :                                       
[  16]        :                                       end main
[  17]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 21      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 23      -   check sum (l.byte)
0013: 51      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 01      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 01      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
