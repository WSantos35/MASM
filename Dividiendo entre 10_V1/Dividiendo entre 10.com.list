EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Dividiendo entre 10.com -- emu8086 assembler version: 4.08  
 
[ 28/07/2019  --  6:05:44 p. m. ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;Programa que divide numeros entre 10
[   2]        :                                       .model tiny
[   3]        :                                       
[   4]    0100: EB 00                                 .data
[   5]        :                                       
[   6]    0102:                                       .code
[   7]        :                                       
[   8]        :                                       imprimirDigito MACRO numero
[   9]        :                                       MOV     dl, numero
[  10]        :                                       ADD     dl, 48
[  11]        :                                       
[  12]        :                                       MOV     ah, 02h
[  13]        :                                       INT     21h
[  14]        :                                       ENDM
[  15]        :                                       
[  16]    0102:                                       .startup
[  17]        :                                       
[  18]    0102: B8 D2 04                              MOV     ax, 1234
[  19]    0105: B1 0A                                 MOV     cl, 10
[  20]        :                                       
[  21]    0107:                                       bucle:
[  22]    0107: F6 F1                                 DIV     cl              ;el residuo en ah y el cociente en al
[  23]    0109: 8B D8                                 MOV     bx, ax
[  24]    010B: 8A D4 80 C2 30 B4 02 CD 21            imprimirDigito ah
[  25]    0114: 8B C3                                 MOV     ax, bx
[  26]    0116: B4 00                                 MOV     ah, 0
[  27]    0118: 3C 00                                 cmp     al, 0
[  28]    011A: 77 EB                                 ja bucle
[  29]        :                                       
[  30]    011C:                                       salir:
[  31]    011C: B8 07 0C                              MOV     ax,0c07h
[  32]    011F: CD 21                                 INT     21h
[  33]        :                                       
[  34]    0121: B8 00 4C CD 21                        .exit
[  35]        :                                       
[  36]        :                                       end
[  37]        :                                       
 
===================================================================================================
 




===================================================================================================
