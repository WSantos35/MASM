EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Ingresar Cadena y Mostrarla al reves.exe -- emu8086 assembler version: 4.08  
 
[ 2/08/2019  --  1:29:58 p. m. ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;Programa que captura una cadena y la imprime al reves, la cadena es de longitud definida
[   2]        :                                       .model small
[   3]        :                                       
[   4]        :                                       .stack
[   5]        :                                       
[   6]        :                                       .data
[   7]    0100: 49 6E 67 72 65 73 65 20 6C 61 20 63   mensaje1 db "Ingrese la cadena: ","$"
                61 64 65 6E 61 3A 20 24             
[   8]    0114: 0A 0D 0A 0D 6C 61 20 63 61 64 65 6E   mensaje2 db 10,13,10,13,"la cadena al reves es: ","$"
                61 20 61 6C 20 72 65 76 65 73 20 65 
                73 3A 20 24                         
[   9]        :                                       
[  10]        :                                       .code
[  11]        :                                       
[  12]    0130: BA 10 00 8E DA                        .startup
[  13]    0135: B9 05 00                              MOV     cx, 5      ;longitud de la cadena a capturar
[  14]        :                                       
[  15]    0138: B4 09                                 MOV     ah, 09h
[  16]    013A: BA 00 00                              MOV     dx, offset mensaje1
[  17]    013D: CD 21                                 INT     21h
[  18]        :                                       
[  19]    013F: B4 01                                 MOV     ah, 01h       ;se va a utilizar la funcion de la int 21h
[  20]        :                                       
[  21]        :                                       
[  22]    0141:                                       capturar:
[  23]    0141: CD 21                                 INT     21h
[  24]    0143: 8A D8                                 MOV     bl, al
[  25]    0145: 53                                    PUSH    bx
[  26]    0146: E2 F9                                 LOOP    capturar
[  27]        :                                       
[  28]    0148: B4 09                                 MOV     ah, 09h
[  29]    014A: BA 14 00                              MOV     dx, offset mensaje2
[  30]    014D: CD 21                                 INT     21h
[  31]        :                                       
[  32]    014F: B9 05 00                              MOV     cx, 5
[  33]    0152: B4 02                                 MOV     ah, 02h
[  34]        :                                       
[  35]    0154:                                       imprimir:
[  36]    0154: 5A                                    POP     dx
[  37]    0155: CD 21                                 INT     21h
[  38]    0157: E2 FB                                 LOOP    imprimir
[  39]        :                                       
[  40]        :                                       
[  41]        :                                       
[  42]    0159: B8 00 4C CD 21                        .exit
[  43]        :                                       
[  44]        :                                       end
[  45]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 5E      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 4B      -   check sum (l.byte)
0013: AA      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 13      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 13      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
